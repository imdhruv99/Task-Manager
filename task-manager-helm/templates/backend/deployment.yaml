apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: {{ .Values.nsName }}
  labels:
    app: backend
spec:
  replicas: {{ .Values.backend.replicas | default 2 }}
  selector:
    matchLabels:
      app: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: backend
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: backend
          image: {{ .Values.backend.image | default "imdhruv99/task-manager-backend:1.0.0" }}
          imagePullPolicy: {{ .Values.backend.imagePullPolicy | default "IfNotPresent" }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1001
            runAsGroup: 1001
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          ports:
            - containerPort: {{ .Values.backend.port | default "5000" }}
              name: http
          resources:
            requests:
              cpu: {{ .Values.backend.resources.requests.cpu | default "100m" }}
              memory: {{ .Values.backend.resources.requests.memory | default "128Mi" }}
            limits:
              cpu: {{ .Values.backend.resources.limits.cpu | default "500m" }}
              memory: {{ .Values.backend.resources.limits.memory | default "512Mi" }}
          envFrom:
            - configMapRef:
                name: backend-config
            - secretRef:
                name: backend-secret
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: logs-volume
              mountPath: /app/logs
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: logs-volume
          emptyDir: {}
