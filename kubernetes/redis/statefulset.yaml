apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: task-manager
  labels:
    app: redis
spec:
  serviceName: "redis"
  replicas: 2
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      # securityContext:
      #   runAsNonRoot: true
      #   seccompProfile:
      #     type: RuntimeDefault
      initContainers:
      - name: init-redis
        image: redis:7-alpine
        command:
        - sh
        - "-c"
        - |
            set -ex
            # Generate mysql server-id from pod ordinal index.
            ordinal=$(hostname | sed 's/[^0-9]*\([0-9]\+\)/\1/')
            if [ -z "$ordinal" ]; then
              echo "Failed to extract ordinal"
              exit 1
            fi

            # Copy appropriate conf.d files from config-map to emptyDir.
            if [ "$ordinal" -eq 0 ]; then
              cp /mnt/config-map/master.conf /tmp/config/redis.conf
            else
              cp /mnt/config-map/slave.conf /tmp/config/redis.conf
            fi
            chown 999:999 /tmp/config/redis.conf
        volumeMounts:
        - name: redis-config
          mountPath: tmp/config/
          subPath: redis.conf
        - name: config-map
          mountPath: /mnt/config-map
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        command: ["redis-server"]
        args: ["/etc/redis.conf"]
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 999
          runAsGroup: 999
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "512Mi"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis.conf
          subPath: redis.conf
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: redis-config
        emptyDir: {}
      - name: config-map
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
